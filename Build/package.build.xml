<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Package" ToolsVersion="4.0">

	<!-- IMPORTS -->
	<PropertyGroup>
		<MSBuildCustomTasksPath>$(MSBuildProjectDirectory)\..\Tools\MSBuildTasks</MSBuildCustomTasksPath>
		<MSBuildCommunityTasksPath>$(MSBuildCustomTasksPath)</MSBuildCommunityTasksPath>
		<MSBuildUmbracoTasksPath>$(MSBuildCustomTasksPath)</MSBuildUmbracoTasksPath>
	</PropertyGroup>

	<Import Project="$(MSBuildCustomTasksPath)\MSBuild.Community.Tasks.Targets" />
	<Import Project="$(MSBuildCustomTasksPath)\MSBuild.Umbraco.Tasks.Targets" />

	<!-- PROPERTIES -->
	<PropertyGroup>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionPatch>0</VersionPatch>
		<VersionSuffix></VersionSuffix>
		<UmbracoVersion>4.8.0</UmbracoVersion>
	</PropertyGroup>

	<PropertyGroup>
		<RootDir>$(MSBuildProjectDirectory)\..</RootDir>
		<BuildDir>$(MSBuildProjectDirectory)\Temp</BuildDir>
		<PackageDir>$(MSBuildProjectDirectory)</PackageDir>
		<ProjectDir>$(RootDir)\Src\Our.Umbraco.DataType.OpenGraph</ProjectDir>
		<ILMergeExe>$(RootDir)\packages\ilmerge.2.13.0307\ILMerge.exe</ILMergeExe>
	</PropertyGroup>

	<!-- TARGETS -->

	<!-- CLEAN -->
	<Target Name="Clean">
		<RemoveDir Directories="$(BuildDir)" Condition="Exists('$(BuildDir)')" />
		<MakeDir Directories="$(BuildDir)" />
	</Target>

	<!-- UPDATE ASSEMBLEY VERSION -->
	<Target Name="UpdateAssemblyInfo" DependsOnTargets="Clean">
		<Version Major="$(VersionMajor)" Minor="$(VersionMinor)" BuildType="Automatic" RevisionType="Automatic" StartDate="19/03/2013">
			<Output TaskParameter="Build" PropertyName="Build" />
			<Output TaskParameter="Revision" PropertyName="Revision" />
		</Version>
		<AssemblyInfo CodeLanguage="CS"
			OutputFile="$(ProjectDir)\Properties\VersionInfo.cs"
			AssemblyVersion="$(VersionMajor).$(VersionMinor).0.0"
			AssemblyFileVersion="$(VersionMajor).$(VersionMinor).$(Build).$(Revision)"
			AssemblyInformationalVersion="$(VersionMajor).$(VersionMinor).$(VersionPatch)$(VersionSuffix)"/>
	</Target>

	<!-- COMPILE -->
	<Target Name="Compile" DependsOnTargets="UpdateAssemblyInfo">
		<MSBuild Projects="$(RootDir)\Our.Umbraco.DataType.OpenGraph.sln" Properties="Configuration=Release" />
	</Target>

	<!-- MERGE DLLS -->
	<Target Name="MergeDlls" DependsOnTargets="Compile">
		<ItemGroup>
			<Dlls Include="$(ProjectDir)\bin\Release\Our.Umbraco.DataType.OpenGraph.dll" />
			<Dlls Include="$(ProjectDir)\bin\Release\OpenGraph-Net.dll" />
		</ItemGroup>
		<Exec Command="$(ILMergeExe) /ndebug /internalize /out:$(ProjectDir)\bin\Release\Our.Umbraco.DataType.OpenGraph.dll @(Dlls, ' ')" />
	</Target>

	<!-- PREPARE FILES -->
	<Target Name="PrepairFiles" DependsOnTargets="MergeDlls">
		<ItemGroup>
			<BinFiles Include="$(ProjectDir)\bin\Release\Our.Umbraco.DataType.OpenGraph.dll" />
			<DebugFiles Include="$(ProjectDir)\bin\Release\Our.Umbraco.DataType.OpenGraph.pdb" />
			<PackageFile Include="$(PackageDir)\package.xml" />
		</ItemGroup>
		<Copy SourceFiles="@(BinFiles)" DestinationFolder="$(BuildDir)\bin" />
		<Copy SourceFiles="@(DebugFiles)" DestinationFolder="$(BuildDir)\bin" Condition="'$(VersionSuffix)' != ''" />
		<Copy SourceFiles="@(PackageFile)" DestinationFolder="$(BuildDir)" />
	</Target>

	<!-- MANIFEST -->
	<Target Name="Manifest" DependsOnTargets="PrepairFiles">
		<ItemGroup>
			<ManifestFiles Include="$(BuildDir)\**\*" Exclude="$(BuildDir)\package.xml" />
		</ItemGroup>
		<ManifestUpdate ManifestFile="$(BuildDir)\package.xml"
			WorkingDirectory="$(BuildDir)"
			MinimumRequiredUmbracoVersion="$(UmbracoVersion)"
			PackageVersion="$(VersionMajor).$(VersionMinor).$(VersionPatch)$(VersionSuffix)"
			Readme="$([System.IO.File]::ReadAllText(readme.txt))"
			Files="@(ManifestFiles)" />
	</Target>

	<!-- PACKAGE -->
	<Target Name="Package" DependsOnTargets="Manifest">
		<ItemGroup>
			<PackageFiles Include="$(BuildDir)\**\*.*" />
		</ItemGroup>
		<Package ManifestFile="$(BuildDir)\package.xml"
			WorkingDirectory="$(BuildDir)"
			OutputDirectory="$(PackageDir)"
			Files="@(PackageFiles)" />
		<RemoveDir Directories="$(BuildDir)" Condition="Exists('$(BuildDir)')" />
	</Target>

</Project>